# coding: utf-8

"""
    Metal API

    desc  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: support@equinixmetal.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import absolute_import

import unittest
import datetime

import equinix_metal
from equinix_metal.models.device_list import DeviceList  # noqa: E501
from equinix_metal.rest import ApiException

class TestDeviceList(unittest.TestCase):
    """DeviceList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DeviceList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceList`
        """
        model = equinix_metal.models.device_list.DeviceList()  # noqa: E501
        if include_optional :
            return DeviceList(
                devices = [
                    equinix_metal.models.device.Device(
                        actions = [
                            equinix_metal.models.device_actions_inner.Device_actions_inner(
                                href = '', 
                                name = '', 
                                type = '', )
                            ], 
                        always_pxe = True, 
                        billing_cycle = '', 
                        bonding_mode = 56, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by = null, 
                        customdata = { }, 
                        description = '', 
                        facility = equinix_metal.models.facility.Facility(
                            address = equinix_metal.models.address.Address(
                                address = '', 
                                address2 = '', 
                                city = '', 
                                coordinates = equinix_metal.models.coordinates.Coordinates(
                                    href = '', 
                                    latitude = '', 
                                    longitude = '', ), 
                                country = '', 
                                href = '', 
                                state = '', 
                                zip_code = '', ), 
                            code = '', 
                            features = ["baremetal","backend_transfer","global_ipv4"], 
                            href = '', 
                            id = '', 
                            ip_ranges = ["2604:1380::/36","147.75.192.0/21"], 
                            metro = null, 
                            name = '', ), 
                        hardware_reservation = equinix_metal.models.href.Href(
                            href = '', ), 
                        hostname = '', 
                        href = '', 
                        id = '', 
                        image_url = '', 
                        ip_addresses = [
                            equinix_metal.models.ip_assignment.IPAssignment(
                                address_family = 56, 
                                assigned_to = equinix_metal.models.href.Href(
                                    href = '', ), 
                                cidr = 56, 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                enabled = True, 
                                gateway = '', 
                                global_ip = True, 
                                href = '', 
                                id = '', 
                                manageable = True, 
                                management = True, 
                                netmask = '', 
                                network = '', 
                                parent_block = equinix_metal.models.parent_block.ParentBlock(
                                    cidr = 56, 
                                    href = '', 
                                    netmask = '', 
                                    network = '', ), 
                                public = True, )
                            ], 
                        ipxe_script_url = '', 
                        iqn = '', 
                        locked = True, 
                        metro = null, 
                        network_ports = [
                            equinix_metal.models.port.Port(
                                bond = equinix_metal.models.bond_port_data.BondPortData(
                                    href = '', 
                                    id = '', 
                                    name = '', ), 
                                data = equinix_metal.models.port_data.PortData(
                                    bonded = True, 
                                    href = '', 
                                    mac = '', ), 
                                disbond_operation_supported = True, 
                                href = '', 
                                id = '', 
                                name = 'bond0', 
                                native_virtual_network = equinix_metal.models.virtual_network.VirtualNetwork(
                                    assigned_to_virtual_circuit = True, 
                                    description = '', 
                                    href = '', 
                                    id = '', 
                                    instances = [
                                        
                                        ], 
                                    metal_gateways = [
                                        equinix_metal.models.metal_gateway_lite.MetalGatewayLite(
                                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            gateway_address = '10.1.2.1/27', 
                                            href = '', 
                                            id = '', 
                                            state = 'ready', 
                                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            vlan = 1001, )
                                        ], 
                                    metro_code = '', 
                                    vxlan = 56, ), 
                                network_type = 'layer2-bonded', 
                                type = 'NetworkPort', 
                                virtual_networks = [
                                    
                                    ], )
                            ], 
                        operating_system = equinix_metal.models.operating_system.OperatingSystem(
                            distro = '', 
                            distro_label = '', 
                            href = '', 
                            id = '', 
                            licensed = True, 
                            name = '', 
                            preinstallable = True, 
                            pricing = equinix_metal.models.pricing.pricing(), 
                            provisionable_on = [
                                ''
                                ], 
                            slug = '', 
                            version = '', ), 
                        plan = equinix_metal.models.plan.Plan(
                            available_in = [
                                equinix_metal.models.plan_available_in_inner.Plan_available_in_inner(
                                    href = '', 
                                    price = equinix_metal.models.plan_available_in_inner_price.Plan_available_in_inner_price(
                                        hour = 1.23, 
                                        href = '', ), )
                                ], 
                            available_in_metros = [
                                equinix_metal.models.plan_available_in_metros_inner.Plan_available_in_metros_inner(
                                    href = '', )
                                ], 
                            class = 'm3.large.x86', 
                            deployment_types = [
                                'on_demand'
                                ], 
                            description = '', 
                            href = '', 
                            id = '', 
                            legacy = True, 
                            line = 'baremetal', 
                            name = '', 
                            pricing = equinix_metal.models.pricing.pricing(), 
                            slug = 'm3.large.x86', 
                            specs = equinix_metal.models.plan_specs.Plan_specs(
                                cpus = [
                                    equinix_metal.models.plan_specs_cpus_inner.Plan_specs_cpus_inner(
                                        count = 56, 
                                        href = '', 
                                        type = '', )
                                    ], 
                                drives = [
                                    equinix_metal.models.plan_specs_drives_inner.Plan_specs_drives_inner(
                                        category = 'boot', 
                                        count = 56, 
                                        href = '', 
                                        size = '3.84TB', 
                                        type = 'HDD', )
                                    ], 
                                features = equinix_metal.models.plan_specs_features.Plan_specs_features(
                                    href = '', 
                                    raid = True, 
                                    txt = True, 
                                    uefi = True, ), 
                                href = '', 
                                nics = [
                                    equinix_metal.models.plan_specs_nics_inner.Plan_specs_nics_inner(
                                        count = 2, 
                                        href = '', 
                                        type = '1Gbps', )
                                    ], ), 
                            type = 'standard', ), 
                        project = null, 
                        project_lite = null, 
                        provisioning_events = [
                            equinix_metal.models.event.Event(
                                body = '', 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                href = '', 
                                id = '', 
                                interpolated = '', 
                                ip = '', 
                                modified_by = equinix_metal.models.modified_by.modified_by(), 
                                relationships = [
                                    
                                    ], 
                                state = '', 
                                type = '', )
                            ], 
                        provisioning_percentage = 1.337, 
                        root_password = '', 
                        short_id = '', 
                        sos = '', 
                        spot_instance = True, 
                        spot_price_max = 1.337, 
                        ssh_keys = [
                            
                            ], 
                        state = 'active', 
                        switch_uuid = '', 
                        tags = [
                            ''
                            ], 
                        termination_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        user = '', 
                        userdata = '', 
                        volumes = [
                            
                            ], )
                    ], 
                href = '', 
                meta = equinix_metal.models.meta.Meta(
                    current_page = 56, 
                    first = equinix_metal.models.href.Href(
                        href = '', ), 
                    href = '', 
                    last = equinix_metal.models.href.Href(
                        href = '', ), 
                    last_page = 56, 
                    next = , 
                    previous = , 
                    self = , 
                    total = 56, )
            )
        else :
            return DeviceList(
        )
        """

    def testDeviceList(self):
        """Test DeviceList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
